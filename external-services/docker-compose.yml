version: '3.8'

services:
  credit-bureau:
    build: ./credit-bureau-service
    container_name: lending-credit-bureau
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3001
      - SERVICE_NAME=credit-bureau
      - MOCK_MODE=${MOCK_MODE:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - API_KEY=${API_KEY:-test_key_development_2025}
      - RATE_LIMIT=${RATE_LIMIT:-100}
    volumes:
      - ./credit-bureau-service:/app
      - /app/node_modules
    networks:
      - lending-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  income-verification:
    build: ./income-verification-service
    container_name: lending-income-verification
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3002
      - SERVICE_NAME=income-verification
      - MOCK_MODE=${MOCK_MODE:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - API_KEY=${API_KEY:-test_key_development_2025}
      - RATE_LIMIT=${RATE_LIMIT:-200}
    volumes:
      - ./income-verification-service:/app
      - /app/node_modules
    networks:
      - lending-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  identity-verification:
    build: ./identity-verification-service
    container_name: lending-identity-verification
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3003
      - SERVICE_NAME=identity-verification
      - MOCK_MODE=${MOCK_MODE:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - API_KEY=${API_KEY:-test_key_development_2025}
      - RATE_LIMIT=${RATE_LIMIT:-200}
    volumes:
      - ./identity-verification-service:/app
      - /app/node_modules
    networks:
      - lending-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  document-processing:
    build: ./document-processing-service
    container_name: lending-document-processing
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3004
      - SERVICE_NAME=document-processing
      - MOCK_MODE=${MOCK_MODE:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - API_KEY=${API_KEY:-test_key_development_2025}
      - RATE_LIMIT=${RATE_LIMIT:-500}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-10485760}  # 10MB
    volumes:
      - ./document-processing-service:/app
      - /app/node_modules
      - ./uploads:/app/uploads  # For storing uploaded documents
    networks:
      - lending-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  notification:
    build: ./notification-service
    container_name: lending-notification
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3005
      - SERVICE_NAME=notification
      - MOCK_MODE=${MOCK_MODE:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - API_KEY=${API_KEY:-test_key_development_2025}
      - RATE_LIMIT=${RATE_LIMIT:-1000}
      - EMAIL_PROVIDER=${EMAIL_PROVIDER:-mock}
      - SMS_PROVIDER=${SMS_PROVIDER:-mock}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID:-}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN:-}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER:-}
    volumes:
      - ./notification-service:/app
      - /app/node_modules
    networks:
      - lending-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

networks:
  lending-network:
    driver: bridge
    name: lending-network

volumes:
  uploads:
    driver: local